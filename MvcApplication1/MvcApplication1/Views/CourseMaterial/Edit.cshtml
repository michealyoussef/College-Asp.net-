@model MvcApplication1.CourseMaterial

@{
    ViewBag.Title = "Edit"; 
   
}
@ViewBag.fileaddress = @Model.FilePath;

<h2>Edit</h2>

@using (Html.BeginForm("Edit", "CourseMaterial", new { id = Model.FilePath, CourseID = ViewBag.CourseID }, FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "return Validate(this);" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    
    
    
    <fieldset>
        <legend>CourseMaterial</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.MaterialID)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.MaterialID)
            @Html.ValidationMessageFor(model => model.MaterialID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CourseID, "Cours")
        </div>
        <div class="editor-field">
            @Html.DropDownList("CourseID", String.Empty)
            @Html.ValidationMessageFor(model => model.CourseID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.MaterialTypeID, "MaterialType")
        </div>
        <div class="editor-field">
            @Html.DropDownList("MaterialTypeID", String.Empty)
            @Html.ValidationMessageFor(model => model.MaterialTypeID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Name)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.FilePath)
        </div>
        <div class="editor-field">
            <input type="file" id="Path" name="FilePath" data-val="true" />
            @Html.ValidationMessageFor(model => model.FilePath)
        </div>

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
      <script>
          
        </script>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
